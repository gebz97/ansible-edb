---
- name: Ensure data directory exists
  ansible.builtin.file:
    path: "{{ edb_data_dir }}"
    state: directory
    owner: enterprisedb
    group: enterprisedb

- name: Check if data directory is empty
  ansible.builtin.shell: test -z "$(ls -A {{ edb_data_dir }})"
  register: is_data_dir_empty
  ignore_errors: true
  changed_when: false

- name: EDB Superuser password file
  ansible.builtin.template:
    src: templates/pwfile.j2
    dest: "{{ edb_superuser_pwfile_path }}"
    mode: 0600
    owner: enterprisedb
    group: root

- name: Construct INITDB options
  set_fact:
    edb_initdb_opts: >-
      -D {{ edb_data_dir }}
      {{ edb_initdb_redwood_compat | ternary('', '--no-redwood-compat') }}
      {{ edb_initdb_redwood_like | ternary('--redwood-like', '') }}
      {{ edb_initdb_icu | ternary('--icu-short-form', '') }}
      -E {{ edb_initdb_encoding }}
      --locale={{ edb_initdb_locale }}
      -U {{ edb_initdb_user }}
      --pwfile={{ edb_superuser_pwfile_path }}
      {{ edb_initdb_extra_opts }}

- name: Run initdb
  ansible.builtin.shell: 
    /usr/edb/as17/bin/initdb {{ edb_initdb_opts }}
  become: true
  become_user: enterprisedb
  when: is_data_dir_empty.rc == 0

- name: Ensure password file is deleted
  ansible.builtin.file:
    path: "{{ edb_superuser_pwfile_path }}"
    state: absent

- name: Ensure the unit file is setup
  ansible.builtin.template:
    src: templates/edb-as-17.service.j2
    dest: /etc/systemd/system/edb-as-17.service
    owner: root
    group: root

- name: Daemon-reload
  ansible.builtin.command: systemctl daemon-reload

- name: Ensure EPAS is listening on all addresses
  ansible.builtin.lineinfile:
    line: listen_addresses = '*'
    path: "{{ edb_data_dir }}/postgresql.conf"
    state: present

- name: Ensure HBA is configured
  ansible.builtin.template:
    src: templates/pg_hba.j2
    dest: "{{ edb_data_dir }}/pg_hba.conf"
    backup: true

- name: Ensure the service is started
  ansible.builtin.service:
    name: edb-as-17
    state: restarted
    enabled: true